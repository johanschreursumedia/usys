#!/bin/bash

# getting current script folder
dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# root directory
rootDir="$( dirname $dir )"

source $rootDir/util/queryVersion
source $rootDir/util/featureChooser

# executing nuke
unset QT_PLUGIN_PATH;

# querying nuke major version
nukeMajorVersion=`majorVersion $UVER_NUKE_VERSION`

# nuke plugins path
nukePluginsPath=$UPLUGINS_ROOT/nuke/$nukeMajorVersion

# default plugin names that always get loaded by default
loadDefaultOfxPlugins=""

# custom plugin names coming from the environment
loadCustomOfxPlugins=$UMEDIA_OFX_PLUGINS

# ofx plugin names about to be loaded (separated by space)
ofxPluginNames="$loadDefaultOfxPlugins $loadCustomOfxPlugins"

# showing a plugin loader interface in case $UMEDIA_SHOW_FEATURE_CHOOSER
# has been defined, this interface allows users to enable/disable plugins that
# have been specifiec previously where custom plugins are listed as disabled and
# default plugins are listed enabled by default
if ! [ -z "$UMEDIA_SHOW_FEATURE_CHOOSER" ]; then
  # overriding the ofx plugin names that should be loaded (defined by the user in the UI)
  ofxPluginNames=$(featureChooser "$loadCustomOfxPlugins" "$loadDefaultOfxPlugins" "Available Nuke Plugins")
fi

# adding automatically the list of the ofx plugin names to the OFX_PLUGIN_PATH
for ofxPluginName in $ofxPluginNames ; do
  ofxPluginVarName="UVER_${ofxPluginName^^}_VERSION"
  ofxPluginVarValue="${!ofxPluginVarName}"
  ofxPluginPathResolved=$nukePluginsPath/$ofxPluginName/$ofxPluginVarValue/bin/$UCORE_OS/$UCORE_OS_VERSION

  export OFX_PLUGIN_PATH=$ofxPluginPathResolved:$OFX_PLUGIN_PATH
done

# launching nuke
exec $UAPPS_ROOT/nuke/$UVER_NUKE_VERSION/bin/$UCORE_OS/$UCORE_OS_VERSION/Nuke* "$@"
