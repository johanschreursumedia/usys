#!/bin/bash

# Returns the python executable version, the executable needs to be passed
# as argument of the function.
# first argument: python executable
# second argument (optional): include path in result (false by default)
# result: semver (example: 2.7)
function pythonVersion()
{

  # arguments
  local pythonExecutable=$1
  local includePatch=$2

  # querying the python verison (Python 2.7.1)
  local version=`$pythonExecutable --version 2>&1 >/dev/null`;

  # getting only the major and minor version from the semver (2.7)
  version=(`echo $version | grep -oE '[0-9]*[0-9]'`)

  # result
  if [ "$includePatch" = true ] ; then
    echo "${version[0]}.${version[1]}.${version[2]}"
  else
    echo "${version[0]}.${version[1]}"
  fi
}

# Returns the major version based on a semver.
# first argument: semver (example: 1.3.0)
# result: major (example: 1)
function majorVersion()
{
  local semver=$1
  echo "$semver" | grep -oE '[0-9].' | head -n 1
}
